---

- name: Get Gem.user_dir
  ansible.builtin.command: ruby -e 'print Gem.user_dir'
  register: gem_info
  changed_when: false

- name: Set facts
  ansible.builtin.set_fact:
    jekyll_dir: "{{ instance.dir | default(jekyll_base_dir + '/' + instance.name) }}"
    jekyll_env: "{{ instance.jekyll_env | default(jekyll_env) }}"
    jekyll_ruby_gem_home: '{{ gem_info.stdout }}'

- name: Install bundler - {{ instance.name }}
  community.general.gem:
    name: bundler
    state: present
  environment:
    GEM_HOME: '{{ jekyll_ruby_gem_home }}'

- name: Install jekyll JEKYLL_ENV={{ jekyll_env }}
  ansible.builtin.git:
    repo: '{{ instance.repo }}'
    dest: '{{ jekyll_dir }}'
    version: '{{ instance.repo_version | default(omit) }}'
    accept_hostkey: true

- name: Jekyll bundle runs
  environment:
    JEKYLL_ENV: '{{ jekyll_env }}'
    GEM_HOME: '{{ jekyll_ruby_gem_home }}'
  block:
    - name: Run Jekyll clean - {{ instance.name }}
      ansible.builtin.command: bash -lc "bundle exec jekyll clean"
      args:
        chdir: '{{ jekyll_dir }}'

    - name: Run Jekyll build - {{ instance.name }}
      ansible.builtin.command: bash -lc "bundle exec jekyll build"
      args:
        chdir: '{{ jekyll_dir }}'

- name: Run Jekyll remove old release dir - {{ instance.name }}
  ansible.builtin.file:
    path: '{{ jekyll_dir }}/{{ jekyll_site_prod }}'
    state: absent

- name: Run Jekyll release dir - {{ instance.name }}
  ansible.builtin.command: mv {{ jekyll_dir }}/_site {{ jekyll_dir }}/{{ jekyll_site_prod }}
